apply plugin: org.robolectric.gradle.RoboJavaModulePlugin
project.mavenArtifactName = "org.robolectric.gradle.plugin"
apply plugin: org.robolectric.gradle.DeployedRoboJavaModulePlugin
apply plugin: 'groovy'
apply plugin: 'java-gradle-plugin'

repositories {
    google()
    jcenter()
}

gradlePlugin {
    plugins {
        robolectric {
            id = "org.robolectric"
            implementationClass = "org.robolectric.gradleplugin.GradlePlugin"
        }
    }
}

task writeDefaultSdksAndRobolectricVersion() {
    doLast {
        File outDir = project.sourceSets['test'].output.resourcesDir
        outDir.mkdirs()
        project.sourceSets['main'].resources.srcDir(outDir)

        File sdksFile = new File(outDir, 'org.robolectric.GradlePlugin.sdks.properties')
        def props = new Properties()
        rootProject.allSdks.forEach { sdk ->
            props.setProperty(sdk.apiLevel.toString(), sdk.coordinates.toString())
        }
        sdksFile.withPrintWriter { out -> props.store(out, null) }

        File versionFile = new File(outDir, 'robolectric-version.txt')
        versionFile.write("${project.version}")
    }
}

tasks['provideSdks'].enabled = false

processResources {
    dependsOn(writeDefaultSdksAndRobolectricVersion)
}

configurations {
    robolectricJars
    sdk28
}

test {
    dependsOn(":robolectric:jar")
}

dependencies {
    compileOnly 'com.android.tools.build:gradle:3.5.3'
    implementation gradleApi()
    implementation localGroovy()

    // Testing dependencies
    testImplementation "junit:junit:4.13"
    testImplementation "org.hamcrest:hamcrest-core:1.3"
    testCompile "com.google.truth:truth:1.0.1"

    robolectricJars project(":robolectric")
    sdk28 "org.robolectric:android-all:9-robolectric-4913185-2"
}

// Pass in :robolectric's and an Android SDK classpath so our testProject can use them.
afterEvaluate {
    test {
        environment([
                "gradle-robolectric-plugin.classpath": configurations['robolectricJars'].files.join(":"),
                "gradle-robolectric-plugin.sdkPath": configurations['sdk28'].files.join(":")
        ])
    }
}
