rootProject.name = 'parent'

include ":robolectric"
include ":robolectric-sandbox"
include ":robolectric-junit"
include ":robolectric-utils"
include ":robolectric-processor"
include ":robolectric-resources"
include ":robolectric-annotations"
include ":robolectric-shadows/shadows-core"
include ":robolectric-shadows/shadows-httpclient"
include ":robolectric-shadows/shadows-maps"
include ":robolectric-shadows/shadows-multidex"
include ":robolectric-shadows/shadows-play-services"
include ":robolectric-shadows/shadows-support-v4"
include ":shadow-api"
include ":integration-tests/dependency-on-stubs"
include ":integration-tests/libphonenumber"
include ":integration-tests/mockito"
include ":integration-tests/mockito-experimental"
include ":integration-tests/powermock"

include ":cts-support"
include ":cts:libs:deviceutil"
include ":cts:common:util"
include ":cts:common:device-side"

new File("cts/tests/tests").listFiles().each { f ->
    if (f.isDirectory()) {
        include ":cts:tests:tests/${f.name}"

        if (new File(f, 'common/src').isDirectory()) {
            include ":cts:tests:tests/${f.name}:common"
        }
    }
}

include ":cts:all"